{"ast":null,"code":"import React from 'react';\nimport questionlist from './questionlist.json';\nimport './App.css';\n\nfunction App() {\n  //입력값 관리\n  const result = []; //퀴즈영역 생성\n\n  let quiz = document.getElementById(\"quiz\"); //질문+보기\n\n  questionlist.forEach(function (data) {\n    //질문과 보기를 slide로 묶음 (1개씩 보이게 하기 위해)\n    let slide = document.createElement('div');\n    slide.className = 'slide';\n    quiz.append(slide); //질문\n\n    let questions = document.createElement('div');\n    questions.className = 'question';\n    questions.innerHTML = data.question;\n    slide.append(questions); //보기 영역\n\n    let optionContainer = document.createElement('form');\n    optionContainer.className = 'optionContainer';\n    slide.append(optionContainer); //낱개별 보기\n\n    data.option.forEach(function (subData) {\n      let labels = document.createElement('label');\n      labels.innerHTML = '<input type=\"radio\" name=\"radio_btn\" value=' + subData.score + '>' + subData.text + '<br>';\n      optionContainer.prepend(labels);\n    });\n  }); //보기 입력값 체크\n\n  function radioCheck() {\n    let radio_btn = document.getElementsByName('radio_btn');\n    let radio_btn_check = false;\n\n    for (let i = 0; i < radio_btn.length; i++) {\n      if (radio_btn[i].checked) {\n        // console.log(`radio_btn[i] >> ${radio_btn[i]}`);\n        radio_btn_check = true;\n        result.push(radio_btn[i].value);\n        plusSlides(1);\n        break;\n      }\n\n      console.log(`radio_btn[i] >> ${radio_btn[i]}`);\n      console.log(`btn[i].checked >> ${radio_btn[i].checked}`);\n    }\n\n    if (!radio_btn_check) {\n      alert(\"답변을 선택해주세요.\");\n    }\n\n    console.log(`btn_check >> ${radio_btn_check}`);\n  } //버튼\n\n\n  let buttonArea = document.createElement('div');\n  buttonArea.className = 'button';\n  buttonArea.innerHTML = '<button id=\"done\" onclick=\"resulte()\">' + '결과 보기' + '</button>' + '<button id=\"next\" onclick=\"radioCheck()\">' + '다음 질문' + '</button>';\n  quiz.append(buttonArea); //퀴즈 영역의 문제를 1개씩 제공\n\n  let slideIndex = 1; //이전, 다음 버튼 선택에 따른 증가, 감소\n\n  function plusSlides(n) {\n    showSlides(slideIndex += n);\n  } //상황에 따른 슬라이드 보여주기\n\n\n  function showSlides(n) {\n    let slides = document.getElementsByClassName(\"slide\");\n    const doneButton = document.getElementById(\"done\");\n    const nextButton = document.getElementById(\"next\"); // 마지막 페이지일 경우 완료버튼 제공\n\n    if (slideIndex != slides.length) {\n      doneButton.style.display = 'none';\n    } else {\n      doneButton.style.display = 'inline-block';\n    } //슬라이드가 마지막페이지 일 경우, 다음버튼 제공하지 않음\n\n\n    if (slideIndex === slides.length) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'inline-block';\n    } //모든 슬라이드를 보이지 않게 하고 1개씩 보이게 함         \n\n\n    for (let i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n\n    slides[slideIndex - 1].style.display = \"block\";\n  }\n\n  return showSlides(slideIndex);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/doosan15/Desktop/web/github/quizreact/src/App.js"],"names":["React","questionlist","App","result","quiz","document","getElementById","forEach","data","slide","createElement","className","append","questions","innerHTML","question","optionContainer","option","subData","labels","score","text","prepend","radioCheck","radio_btn","getElementsByName","radio_btn_check","i","length","checked","push","value","plusSlides","console","log","alert","buttonArea","slideIndex","n","showSlides","slides","getElementsByClassName","doneButton","nextButton","style","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport questionlist from './questionlist.json';\nimport './App.css';\n\nfunction App() {\n  //입력값 관리\n  const result = [];\n  //퀴즈영역 생성\nlet quiz = document.getElementById(\"quiz\");\n\n  //질문+보기\nquestionlist.forEach(function (data) {\n\n  //질문과 보기를 slide로 묶음 (1개씩 보이게 하기 위해)\n  let slide = document.createElement('div');\n  slide.className = 'slide';\n  quiz.append(slide);\n\n  //질문\n  let questions = document.createElement('div');\n  questions.className = 'question';\n  questions.innerHTML = data.question;\n  slide.append(questions);\n\n  //보기 영역\n  let optionContainer = document.createElement('form');\n  optionContainer.className = 'optionContainer';\n  slide.append(optionContainer);\n\n  //낱개별 보기\n  data.option.forEach(function (subData) {\n      let labels = document.createElement('label');\n      labels.innerHTML =\n          '<input type=\"radio\" name=\"radio_btn\" value=' + subData.score + '>' +\n          subData.text +\n          '<br>';\n      optionContainer.prepend(labels);\n  });\n});\n\n//보기 입력값 체크\nfunction radioCheck(){\n  let radio_btn=document.getElementsByName('radio_btn');\n  let radio_btn_check=false;\n  for(let i=0; i<radio_btn.length; i++){\n      if(radio_btn[i].checked){\n          // console.log(`radio_btn[i] >> ${radio_btn[i]}`);\n          radio_btn_check=true;\n          result.push(radio_btn[i].value);\n          plusSlides(1);\n          break;\n      }\n      console.log(`radio_btn[i] >> ${radio_btn[i]}`);\n      console.log(`btn[i].checked >> ${radio_btn[i].checked}`);\n  }\n  if(!radio_btn_check){\n      alert(\"답변을 선택해주세요.\");\n  }\n  console.log(`btn_check >> ${radio_btn_check}`);\n}\n\n//버튼\nlet buttonArea = document.createElement('div');\nbuttonArea.className = 'button';\nbuttonArea.innerHTML =\n    '<button id=\"done\" onclick=\"resulte()\">' +\n    '결과 보기' +\n    '</button>' +\n    '<button id=\"next\" onclick=\"radioCheck()\">' +\n    '다음 질문' +\n    '</button>';\nquiz.append(buttonArea);\n\n\n//퀴즈 영역의 문제를 1개씩 제공\nlet slideIndex = 1;\n\n//이전, 다음 버튼 선택에 따른 증가, 감소\nfunction plusSlides(n) {\n    showSlides(slideIndex += n);\n}\n\n//상황에 따른 슬라이드 보여주기\nfunction showSlides(n) {\n    let slides = document.getElementsByClassName(\"slide\");\n    const doneButton = document.getElementById(\"done\");\n    const nextButton = document.getElementById(\"next\");\n\n    // 마지막 페이지일 경우 완료버튼 제공\n    if (slideIndex != slides.length) {\n        doneButton.style.display = 'none';\n    } else {\n        doneButton.style.display = 'inline-block';\n    }\n\n    //슬라이드가 마지막페이지 일 경우, 다음버튼 제공하지 않음\n    if (slideIndex === slides.length) {\n        nextButton.style.display = 'none';\n    } else {\n        nextButton.style.display = 'inline-block';\n    }\n\n    //모든 슬라이드를 보이지 않게 하고 1개씩 보이게 함         \n    for (let i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n    }\n    slides[slideIndex - 1].style.display = \"block\";\n}\n  return (\n    showSlides(slideIndex)\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/doosan15/Desktop/web/github/quizreact/src/App.js\";\nimport React from 'react';\nimport questionlist from './questionlist.json';\nimport './App.css';\n\nfunction App() {\n  //퀴즈영역 생성\n  let quiz = document.getElementById(\"quiz\"); //입력값 관리\n\n  const result = []; //퀴즈 영역의 문제를 1개씩 제공\n\n  let slideIndex = 1; //보기 입력값 체크\n\n  function radioCheck() {\n    let radio_btn = document.getElementsByName('radio_btn');\n    let radio_btn_check = false;\n\n    for (let i = 0; i < radio_btn.length; i++) {\n      if (radio_btn[i].checked) {\n        radio_btn_check = true;\n        result.push(radio_btn[i].value);\n        plusSlides(1);\n        break;\n      }\n    }\n\n    if (!radio_btn_check) {\n      alert(\"답변을 선택해주세요.\");\n    }\n  } //이전, 다음 버튼 선택에 따른 증가, 감소\n\n\n  function plusSlides(n) {\n    showSlides(slideIndex += n);\n  } //상황에 따른 슬라이드 보여주기\n\n\n  function showSlides(n) {\n    let slides = document.getElementsByClassName(\"slide\");\n    let doneButton = document.getElementById(\"done\");\n    let nextButton = document.getElementById(\"next\");\n    let noneStyle = {\n      display: \"none\"\n    };\n    let viewStyle = {\n      display: \"inline-block\"\n    }; // 마지막 페이지일 경우 완료버튼 제공\n\n    if (slideIndex != slides.length) {\n      doneButton = noneStyle;\n    } else {\n      doneButton = viewStyle;\n    } //슬라이드가 마지막페이지 일 경우, 다음버튼 제공하지 않음\n\n\n    if (slideIndex === slides.length) {\n      nextButton = {\n        noneStyle\n      };\n    } else {\n      nextButton = {\n        viewStyle\n      };\n    } //모든 슬라이드를 보이지 않게 하고 1개씩 보이게 함         \n\n\n    for (let i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n\n    slides[slideIndex - 1].style.display = \"block\";\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, questionlist.forEach(function (data) {\n    //질문과 보기를 slide로 묶음 (1개씩 보이게 하기 위해)\n    let slide = document.createElement('div');\n    slide.className = 'slide';\n    quiz.append(slide); //질문\n\n    let questions = document.createElement('div');\n    questions.className = 'question';\n    questions.innerHTML = data.question;\n    slide.append(questions); //보기 영역\n\n    let optionContainer = document.createElement('form');\n    optionContainer.className = 'optionContainer';\n    slide.append(optionContainer); //낱개별 보기\n\n    data.option.forEach(function (subData) {\n      let labels = document.createElement('label');\n      labels.innerHTML = '<input type=\"radio\" name=\"radio_btn\" value=' + subData.score + '>' + subData.text + '<br>';\n      optionContainer.prepend(labels);\n    });\n  }), showSlides(slideIndex), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"done\",\n    onClick: radioCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"\\uACB0\\uACFC \\uBCF4\\uAE30\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"next\",\n    onClick: radioCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"\\uB2E4\\uC74C \\uC9C8\\uBB38\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/doosan15/Desktop/web/github/quizreact/src/App.js"],"names":["React","questionlist","App","quiz","document","getElementById","result","slideIndex","radioCheck","radio_btn","getElementsByName","radio_btn_check","i","length","checked","push","value","plusSlides","alert","n","showSlides","slides","getElementsByClassName","doneButton","nextButton","noneStyle","display","viewStyle","style","forEach","data","slide","createElement","className","append","questions","innerHTML","question","optionContainer","option","subData","labels","score","text","prepend"],"mappings":"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","sourcesContent":["import React from 'react';\nimport questionlist from './questionlist.json';\nimport './App.css';\n\nfunction App() {\n\n  //퀴즈영역 생성\n  let quiz = document.getElementById(\"quiz\");\n\n  //입력값 관리\n  const result = [];\n\n  //퀴즈 영역의 문제를 1개씩 제공\n  let slideIndex = 1;\n\n  //보기 입력값 체크\n  function radioCheck() {\n    let radio_btn = document.getElementsByName('radio_btn');\n    let radio_btn_check = false;\n    for (let i = 0; i < radio_btn.length; i++) {\n      if (radio_btn[i].checked) {\n        radio_btn_check = true;\n        result.push(radio_btn[i].value);\n        plusSlides(1);\n        break;\n      }\n    }\n    if (!radio_btn_check) {\n      alert(\"답변을 선택해주세요.\");\n    }\n  }\n\n\n\n  //이전, 다음 버튼 선택에 따른 증가, 감소\n  function plusSlides(n) {\n    showSlides(slideIndex += n);\n  }\n\n  //상황에 따른 슬라이드 보여주기\n  function showSlides(n) {\n    let slides = document.getElementsByClassName(\"slide\");\n    let doneButton = document.getElementById(\"done\");\n    let nextButton = document.getElementById(\"next\");\n    let noneStyle={\n      display: \"none\"\n    }\n    \n    let viewStyle={\n      display: \"inline-block\"\n    }\n\n    // 마지막 페이지일 경우 완료버튼 제공\n    if (slideIndex != slides.length) {\n      doneButton = noneStyle;\n    } else {\n      doneButton = viewStyle;\n    }\n\n    //슬라이드가 마지막페이지 일 경우, 다음버튼 제공하지 않음\n    if (slideIndex === slides.length) {\n      nextButton = {noneStyle};\n    } else {\n      nextButton = {viewStyle};\n    }\n\n    //모든 슬라이드를 보이지 않게 하고 1개씩 보이게 함         \n    for (let i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n    slides[slideIndex - 1].style.display = \"block\";\n  }\n\n\n  \n\n  return ( \n    <> \n    {/* 질문리스트 보기 */}\n    {\n      questionlist.forEach(function (data) {\n\n        //질문과 보기를 slide로 묶음 (1개씩 보이게 하기 위해)\n        let slide = document.createElement('div');\n        slide.className = 'slide';\n        quiz.append(slide);\n\n        //질문\n        let questions = document.createElement('div');\n        questions.className = 'question';\n        questions.innerHTML = data.question;\n        slide.append(questions);\n\n        //보기 영역\n        let optionContainer = document.createElement('form');\n        optionContainer.className = 'optionContainer';\n        slide.append(optionContainer);\n\n        //낱개별 보기\n        data.option.forEach(function (subData) {\n          let labels = document.createElement('label');\n          labels.innerHTML =\n            '<input type=\"radio\" name=\"radio_btn\" value=' + subData.score + '>' +\n            subData.text +\n            '<br>';\n          optionContainer.prepend(labels);\n        });\n      })   \n    }\n\n    {/* 질문 리스트를 1개씩 보기 */}\n    {showSlides(slideIndex)}\n\n    {/* 버튼 생성 */}\n    <div className = 'button'>\n      <button id=\"done\" onClick={radioCheck}>결과 보기</button>\n      <button id=\"next\" onClick={radioCheck}>다음 질문</button>\n    </div>\n\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
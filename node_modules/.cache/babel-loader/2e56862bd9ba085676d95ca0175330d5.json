{"ast":null,"code":"var _jsxFileName = \"/Users/doosan15/Desktop/web/github/quizreact/src/App.js\";\nimport React from 'react';\nimport questionlist from './questionlist.json';\nimport './App.css';\n\nfunction App() {\n  /* 입력값 관리 */\n  const result = [];\n  let quiz = document.getElementById(\"quiz\");\n  {\n    /* 퀴즈 영역의 문제를 1개씩 제공 */\n  }\n  let slideIndex = 1;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }\n  }, questionlist.forEach(function (data) {\n    //질문과 보기를 slide로 묶음 (1개씩 보이게 하기 위해)\n    let slide = document.createElement('div');\n    slide.className = 'slide';\n    quiz.append(slide); //질문\n\n    let questions = document.createElement('div');\n    questions.className = 'question';\n    questions.innerHTML = data.question;\n    slide.append(questions); //보기 영역\n\n    let optionContainer = document.createElement('form');\n    optionContainer.className = 'optionContainer';\n    slide.append(optionContainer); //낱개별 보기\n\n    data.option.forEach(function (subData) {\n      let labels = document.createElement('label');\n      labels.innerHTML = '<input type=\"radio\" name=\"radio_btn\" value=' + subData.score + '>' + subData.text + '<br>';\n      optionContainer.prepend(labels);\n    });\n  }), function plusSlides(n) {\n    showSlides(slideIndex += n);\n  }, function radioCheck() {\n    let radio_btn = document.getElementsByName('radio_btn');\n    let radio_btn_check = false;\n\n    for (let i = 0; i < radio_btn.length; i++) {\n      if (radio_btn[i].checked) {\n        radio_btn_check = true;\n        result.push(radio_btn[i].value);\n        plusSlides(1);\n        break;\n      }\n    }\n\n    if (!radio_btn_check) {\n      alert(\"답변을 선택해주세요.\");\n    }\n  }, function showSlides(n) {\n    let slides = document.getElementsByClassName(\"slide\");\n    const doneButton = document.getElementById(\"done\");\n    const nextButton = document.getElementById(\"next\"); // 마지막 페이지일 경우 완료버튼 제공\n\n    if (slideIndex != slides.length) {\n      doneButton.style.display = 'none';\n    } else {\n      doneButton.style.display = 'inline-block';\n    } //슬라이드가 마지막페이지 일 경우, 다음버튼 제공하지 않음\n\n\n    if (slideIndex === slides.length) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'inline-block';\n    } //모든 슬라이드를 보이지 않게 하고 1개씩 보이게 함         \n\n\n    for (let i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n\n    slides[slideIndex - 1].style.display = \"block\";\n  }, showSlides(slideIndex), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"done\",\n    onclick: \"resulte()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }\n  }, \"\\uACB0\\uACFC\\uBCF4\\uAE30\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"next\",\n    onclick: \"radioCheck()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, \"\\uB2E4\\uC74C \\uC9C8\\uBB38\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/doosan15/Desktop/web/github/quizreact/src/App.js"],"names":["React","questionlist","App","result","quiz","document","getElementById","slideIndex","forEach","data","slide","createElement","className","append","questions","innerHTML","question","optionContainer","option","subData","labels","score","text","prepend","plusSlides","n","showSlides","radioCheck","radio_btn","getElementsByName","radio_btn_check","i","length","checked","push","value","alert","slides","getElementsByClassName","doneButton","nextButton","style","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport questionlist from './questionlist.json';\nimport './App.css';\n\nfunction App() {\n\n/* 입력값 관리 */\nconst result = [];\nlet quiz = document.getElementById(\"quiz\");\n{/* 퀴즈 영역의 문제를 1개씩 제공 */}\nlet slideIndex = 1;\n\n  \n\n\n  return (\n<div className='quizbox'>\n\n\n\n{/* 질문+보기 */}\n  {questionlist.forEach(function (data) {\n\n    //질문과 보기를 slide로 묶음 (1개씩 보이게 하기 위해)\n    let slide = document.createElement('div');\n    slide.className = 'slide';\n    quiz.append(slide);\n\n    //질문\n    let questions = document.createElement('div');\n    questions.className = 'question';\n    questions.innerHTML = data.question;\n    slide.append(questions);\n\n    //보기 영역\n    let optionContainer = document.createElement('form');\n    optionContainer.className = 'optionContainer';\n    slide.append(optionContainer);\n\n    //낱개별 보기\n    data.option.forEach(function (subData) {\n      let labels = document.createElement('label');\n      labels.innerHTML =\n        '<input type=\"radio\" name=\"radio_btn\" value=' + subData.score + '>' +\n        subData.text +\n        '<br>';\n      optionContainer.prepend(labels);\n    });\n  })\n  }\n\n\n\n{/* 이전, 다음 버튼 선택에 따른 증가, 감소 */}\n{function plusSlides(n) {\n    showSlides(slideIndex += n);\n}\n}\n\n{/* 보기 입력값 체크 */}\n{function radioCheck() {\n    let radio_btn = document.getElementsByName('radio_btn');\n    let radio_btn_check = false;\n    for (let i = 0; i < radio_btn.length; i++) {\n      if (radio_btn[i].checked) {\n        radio_btn_check = true;\n        result.push(radio_btn[i].value);\n        plusSlides(1);\n        break;\n      }\n    }\n    if (!radio_btn_check) {\n      alert(\"답변을 선택해주세요.\");\n    }\n  }\n}\n\n{/* 상황에 따른 슬라이드 보여주기 */}\n{function showSlides(n) {\n    let slides = document.getElementsByClassName(\"slide\");\n    const doneButton = document.getElementById(\"done\");\n    const nextButton = document.getElementById(\"next\");\n\n    // 마지막 페이지일 경우 완료버튼 제공\n    if (slideIndex != slides.length) {\n        doneButton.style.display = 'none';\n    } else {\n        doneButton.style.display = 'inline-block';\n    }\n\n    //슬라이드가 마지막페이지 일 경우, 다음버튼 제공하지 않음\n    if (slideIndex === slides.length) {\n        nextButton.style.display = 'none';\n    } else {\n        nextButton.style.display = 'inline-block';\n    }\n\n    //모든 슬라이드를 보이지 않게 하고 1개씩 보이게 함         \n    for (let i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n    }\n    slides[slideIndex - 1].style.display = \"block\";\n}}\n{\nshowSlides(slideIndex)\n}\n\n{/* 버튼 */}\n<div className = \"button\">\n  <button id=\"done\" onclick=\"resulte()\">결과보기</button>\n  <button id=\"next\" onclick=\"radioCheck()\">다음 질문</button>\n</div>\n\n</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}